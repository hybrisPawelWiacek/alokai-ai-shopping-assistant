import type { MockFactoryContext } from '@core';

import {
  addCartLineItem,
  applyCouponToCart,
  changeCustomerPassword,
  createCustomerAddress,
  deleteCustomerAddress,
  getAvailableShippingMethods,
  getCart,
  getCategories,
  getCategory,
  getCurrencies,
  getCustomer,
  getCustomerAddresses,
  getOrderDetails,
  getOrders,
  getProductDetails,
  getProductReviews,
  loginCustomer,
  placeOrder,
  registerCustomer,
  removeCartLineItem,
  removeCouponFromCart,
  searchProduct,
  setCartAddress,
  setCustomerEmail,
  setShippingMethod,
  updateCustomer,
  updateCustomerAddress,
} from './endpoints';

export const serverFactory = [
  (ctx: MockFactoryContext) => getCustomer(ctx),
  (ctx: MockFactoryContext) => getCart(ctx),
  (ctx: MockFactoryContext) => getCurrencies(ctx),
  (ctx: MockFactoryContext) => getCategories(ctx),
  (ctx: MockFactoryContext) => getProductDetails(ctx),
  (ctx: MockFactoryContext) => getCategory(ctx),
  (ctx: MockFactoryContext) => searchProduct(ctx),
  (ctx: MockFactoryContext) => registerCustomer(ctx),
  (ctx: MockFactoryContext) => addCartLineItem(ctx),
  (ctx: MockFactoryContext) => updateCustomer(ctx),
  (ctx: MockFactoryContext) => changeCustomerPassword(ctx),
  (ctx: MockFactoryContext) => getCustomerAddresses(ctx),
  (ctx: MockFactoryContext) => createCustomerAddress(ctx),
  (ctx: MockFactoryContext) => updateCustomerAddress(ctx),
  (ctx: MockFactoryContext) => deleteCustomerAddress(ctx),
  (ctx: MockFactoryContext) => getOrderDetails(ctx),
  (ctx: MockFactoryContext) => getOrders(ctx),
  (ctx: MockFactoryContext) => applyCouponToCart(ctx),
  (ctx: MockFactoryContext) => removeCouponFromCart(ctx),
  (ctx: MockFactoryContext) => removeCartLineItem(ctx),
  (ctx: MockFactoryContext) => getProductReviews(ctx),
  (ctx: MockFactoryContext) => loginCustomer(ctx),
  (ctx: MockFactoryContext) => setCustomerEmail(ctx),
  (ctx: MockFactoryContext) => getAvailableShippingMethods(ctx),
  (ctx: MockFactoryContext) => placeOrder(ctx),
  (ctx: MockFactoryContext) => setShippingMethod(ctx),
  (ctx: MockFactoryContext) => setCartAddress(ctx),
];
